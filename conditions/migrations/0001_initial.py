# Generated by Django 4.2.7 on 2025-08-12 16:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('waterway_type', models.CharField(blank=True, max_length=100)),
                ('nearest_town', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('latitude', 'longitude')},
            },
        ),
        migrations.CreateModel(
            name='WeatherCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('temperature', models.DecimalField(decimal_places=1, max_digits=4)),
                ('wind_speed', models.DecimalField(decimal_places=1, max_digits=4)),
                ('wind_gust', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('wind_direction', models.IntegerField()),
                ('precipitation', models.DecimalField(decimal_places=1, default=0, max_digits=4)),
                ('humidity', models.IntegerField()),
                ('pressure', models.DecimalField(decimal_places=1, max_digits=6)),
                ('visibility', models.DecimalField(blank=True, decimal_places=1, max_digits=5, null=True)),
                ('weather_description', models.CharField(max_length=255)),
                ('icon_code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weather_conditions', to='conditions.location')),
            ],
            options={
                'ordering': ['-timestamp'],
                'unique_together': {('location', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='WaterCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('water_level', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('flow_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('tide_height', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('tide_type', models.CharField(blank=True, max_length=20)),
                ('water_temperature', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_conditions', to='conditions.location')),
            ],
            options={
                'ordering': ['-timestamp'],
                'unique_together': {('location', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='RowabilityScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('score', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('dangerous', 'Dangerous')], max_length=20)),
                ('score_value', models.IntegerField()),
                ('factors', models.JSONField()),
                ('recommendations', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rowability_scores', to='conditions.location')),
            ],
            options={
                'ordering': ['-timestamp'],
                'unique_together': {('location', 'timestamp')},
            },
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forecast_date', models.DateField()),
                ('forecast_time', models.TimeField()),
                ('temperature_min', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('temperature_max', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('wind_speed', models.DecimalField(decimal_places=1, max_digits=4)),
                ('wind_gust', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('wind_direction', models.IntegerField()),
                ('precipitation_probability', models.IntegerField()),
                ('weather_description', models.CharField(max_length=255)),
                ('icon_code', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forecasts', to='conditions.location')),
            ],
            options={
                'ordering': ['forecast_date', 'forecast_time'],
                'unique_together': {('location', 'forecast_date', 'forecast_time')},
            },
        ),
    ]
